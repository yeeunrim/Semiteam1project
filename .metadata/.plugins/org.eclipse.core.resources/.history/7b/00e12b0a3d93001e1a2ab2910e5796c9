package board;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import common.JDBCUtil;

public class BoardDAO {
	Connection conn = null;		// db연결 및 종료
	PreparedStatement pstmt = null;	// sql 처리
	ResultSet rs = null;	// 검색한 데이터셋
	
	// 게시글 목록
	public List<Board> getBoardList(){
		List<Board> boardList = new ArrayList<>();
		try {
		// db 연결
		conn = JDBCUtil.getConnection();
		// sql 처리
		String sql = "select * from board order by createdate DESC";
		pstmt = conn.prepareStatement(sql);
		rs = pstmt.executeQuery();
		while(rs.next()) {
			Board b = new Board();
			b.setBno(rs.getInt("bno"));
			b.setTitle(rs.getNString("title"));
			b.setContent(rs.getString("content"));
			b.setCreateDate(rs.getTimestamp("createdate"));
			b.setModifyDate(rs.getTimestamp("modifydate"));
			b.setHit(rs.getInt("hit"));
			b.setFilename(rs.getString("filename"));
			b.setId(rs.getString("id"));
			
			boardList.add(b);
			}
		} catch(Exception e) {
			e.printStackTrace();
			} finally {
				JDBCUtil.close(conn, pstmt, rs);
			}
			return boardList;
	}
	
	// 글쓰기 처리
	public void write(Board b) {
		try {
			// db 연결
			conn = JDBCUtil.getConnection();
			// sql 처리
			String sql = "INSERT INTO board (bno, title, content, id) "
					+ "VALUES (seq_bno.NEXTVAL, ?, ?, ?)";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, b.getTitle());
			pstmt.setString(2, b.getContent());
			pstmt.setString(3, b.getId());
			// sql 실행
			pstmt.executeUpdate();
			} catch(Exception e) {
				e.printStackTrace();
			} finally {
				JDBCUtil.close(conn, pstmt);
			}
	}
	
	// 게시글 상세보기
	public Board getBoard(int bno) {
		Board b = new Board();
		try {
			conn = JDBCUtil.getConnection();
			String sql = "select * from board where bno =?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, bno);
			rs = pstmt.executeQuery();
			if(rs.next()) {
				b.setBno(rs.getInt("bno"));
				b.setTitle(rs.getNString("title"));
				b.setContent(rs.getString("content"));
				b.setCreateDate(rs.getTimestamp("createdate"));
				b.setModifyDate(rs.getTimestamp("modifydate"));
				b.setHit(rs.getInt("hit"));
				b.setFilename(rs.getString("filename"));
				b.setId(rs.getString("id"));
				b.setHt(rs.getInt("ht"));
				
				// 조회수 1증가
				sql = "UPDATE board SET hit = hit + 1 WHERE bno = ?";
				pstmt = conn.prepareStatement(sql);
				/* pstmt.setInt(1, rs.getInt("hit")+1); */
				pstmt.setInt(1, bno);
				pstmt.executeUpdate();	// 실행				
			}
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			JDBCUtil.close(conn, pstmt, rs);
		}
		return b;
	}
	
	// 게시물 삭제
	public void deleteboard(int bno) {
		try {
			// db 연결
			conn = JDBCUtil.getConnection();
			// sql 처리
			String sql = "DELETE FROM board WHERE bno = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, bno);
			// sql 실행
			pstmt.executeUpdate();
			} catch(Exception e) {
				e.printStackTrace();
			} finally {
				JDBCUtil.close(conn, pstmt);
			}
	}
	// 게시글 수정
	public void updateboard(Board b) {
		Timestamp now = new Timestamp(System.currentTimeMillis());
		try {
			// db 연결
			conn = JDBCUtil.getConnection();
			// sql 처리
			String sql = "UPDATE board SET title = ?, content = ?, modifydate = ? "
					+ "WHERE bno = ?";
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, b.getTitle());
			pstmt.setString(2, b.getContent());
			pstmt.setTimestamp(3, now);
			pstmt.setInt(4, b.getBno());
			// sql 실행
			pstmt.executeUpdate();
			} catch(Exception e) {
				e.printStackTrace();
			} finally {
				JDBCUtil.close(conn, pstmt);
			}
	}
	// 좋아요
	public int like(int bno) {
	    String SQL = "UPDATE board SET likeCount = likeCount + 1 WHERE bno = ?";
	    try {
	        PreparedStatement pstmt = conn.prepareStatement(SQL);
	        pstmt.setInt(1, bno);
	        return pstmt.executeUpdate();
	    } catch(Exception e) {
	        e.printStackTrace();
	    } 
	    return -1;
	}
	
	
	
	
	
}// DAO 클래스 닫기
