/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2023-12-14 08:13:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mypage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>마이페이지</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"../resources/css/style.css\">\r\n");
      out.write("  <script src=\"https://kit.fontawesome.com/d591ef8969.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("  <script src=\"../resources/js/a.js\"></script>\r\n");
      out.write("  <script src=\"https://code.jquery.com/jquery-3.6.4.min.js\"></script>\r\n");
      out.write("  <script src=\"../resources/js/main.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"mmm\">	\r\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header.jsp", out, false);
      out.write("\r\n");
      out.write("  <section class=\"my_container\">\r\n");
      out.write("    <div class=\"profile\">\r\n");
      out.write("      <img src=\"../resources/images/page.png\" alt=\"프로필사진\">\r\n");
      out.write("      <div id=\"my_an\">\r\n");
      out.write("        <p>나의 프로필</p>\r\n");
      out.write("        <p><br>닉네임</p>\r\n");
      out.write("        <p>주소</p>\r\n");
      out.write("        <p><br>안녕하세요</p>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div id=\"myModal\" class=\"modal\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("          <span class=\"close\" onclick=\"closeModal()\">&times;</span>\r\n");
      out.write("          <!-- 프로필 수정 폼이 들어갈 부분 -->\r\n");
      out.write("          <form id=\"profileForm\">\r\n");
      out.write("            <img src=\"../resources/images/page.png\" alt=\"프로필사진\">\r\n");
      out.write("            <!-- 프로필 수정 내용 입력 폼 등을 추가하세요 -->\r\n");
      out.write("            <div id=\"my_p\">\r\n");
      out.write("              <p>나의 프로필</p>\r\n");
      out.write("              <hr>\r\n");
      out.write("              <p><label for=\"nic\">닉네임</label>\r\n");
      out.write("                <input type=\"text\" id=\"nic\" name=\"nic\"></p>\r\n");
      out.write("              <p><label for=\"addr\">주소</label>\r\n");
      out.write("                <input type=\"text\" id=\"addr\" name=\"addr\"></p>\r\n");
      out.write("              <p><label for=\"long\">한 줄 소개</label>\r\n");
      out.write("                <input type=\"textarea\" id=\"long\" name=\"long\"></p>\r\n");
      out.write("              \r\n");
      out.write("              <button type=\"button\" onclick=\"saveProfile()\">변경사항 저장</button>\r\n");
      out.write("            </div>\r\n");
      out.write("          </form>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <button id=\"modify\" onclick=\"openModal()\"><i class=\"fa-solid fa-pen\"></i></button>\r\n");
      out.write("      <button id=\"modify2\"><a href=\"setting.jsp\"><i class=\"fa-solid fa-gear\"></i></a></button>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"select\">\r\n");
      out.write("      <a href=\"#\" class=\"toggle-link\">내 게시물 </a>\r\n");
      out.write("      <a href=\"#\" class=\"toggle-link\">내 댓글 </a>\r\n");
      out.write("      <a href=\"#\" class=\"toggle-link\">찜 </a>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"box\">\r\n");
      out.write("      <div id=\"box1\">\r\n");
      out.write("        <div class=\"title\"><a href=\"\">제목</a></div>\r\n");
      out.write("        <div class=\"con\">글내용</div>\r\n");
      out.write("        <div class=\"like\">\r\n");
      out.write("          <a href=\"\"> 찜 0 </a>\r\n");
      out.write("          <a href=\"\"> 댓글 0 </a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div id=\"box1\">\r\n");
      out.write("        <div class=\"title\"><a href=\"\">제목</a></div>\r\n");
      out.write("        <div class=\"con\">글내용</div>\r\n");
      out.write("        <div class=\"like\">\r\n");
      out.write("          <a href=\"\"> 찜 0 </a>\r\n");
      out.write("          <a href=\"\"> 댓글 0 </a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div id=\"box1\">\r\n");
      out.write("        <div class=\"title\"><a href=\"\">제목</a></div>\r\n");
      out.write("        <div class=\"con\">글내용</div>\r\n");
      out.write("        <div class=\"like\">\r\n");
      out.write("          <a href=\"\"> 찜 0 </a>\r\n");
      out.write("          <a href=\"\"> 댓글 0 </a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      <div id=\"box1\">\r\n");
      out.write("        <div class=\"title\"><a href=\"\">제목</a></div>\r\n");
      out.write("        <div class=\"con\">글내용</div>\r\n");
      out.write("        <div class=\"like\">\r\n");
      out.write("          <a href=\"\"> 찜 0 </a>\r\n");
      out.write("          <a href=\"\"> 댓글 0 </a>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"more\">\r\n");
      out.write("        <a href=\"\">+ MORE</a>\r\n");
      out.write("    </div>\r\n");
      out.write("  </section>\r\n");
      out.write("  </div>\r\n");
      out.write("  	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
