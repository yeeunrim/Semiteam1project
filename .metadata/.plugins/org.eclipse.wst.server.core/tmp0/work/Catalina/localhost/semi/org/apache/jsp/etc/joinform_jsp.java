/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.83
 * Generated at: 2023-12-05 08:36:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.etc;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinform_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1701764597575L));
    _jspx_dependants.put("jar:file:/C:/semi/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/semi/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>회원 가입 폼</title>\n");
      out.write("<link rel=\"stylesheet\" href=\"../resources/css/style.css\">\n");
      out.write("<script src=\"../resources/js/jquery-3.7.1.js\"></script>\n");
      out.write("<script src=\"../resources/js/validation.js\"></script>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../header.jsp", out, false);
      out.write("\n");
      out.write("    <div id=\"container\">\n");
      out.write("      <section id=\"join\">\n");
      out.write("		<h2>회원 가입</h2>\n");
      out.write("		  <form action=\"/insertmember.do\" method=\"post\" name=\"member\">\n");
      out.write("		    <fieldset>\n");
      out.write("		    	<ul>\n");
      out.write("		    		<li>\n");
      out.write("		    			<label for=\"t_id\">아이디</label>\n");
      out.write("		    			<input type=\"text\" id=\"t_id\" name=\"id\" \n");
      out.write("		    							placeholder=\"아이디는 4 ~ 15자까지 입력 가능\">\n");
      out.write("		    					<button type=\"button\" id=\"btnChk\" value=\"N\" \n");
      out.write("		    								class=\"btn_check\" onclick=\"checkId()\">ID 중복</button>\n");
      out.write("		    					<div id=\"message\"></div>\n");
      out.write("		    		</li>\n");
      out.write("		    		<li>\n");
      out.write("		    			<label for=\"passwd\">비밀번호</label>\n");
      out.write("		    			<input type=\"password\" id=\"passwd\" name=\"passwd\" \n");
      out.write("		    							placeholder=\"비밀번호는 영문자, 숫자, 특수문자 포함해서 8자 이상 입력 가능\">\n");
      out.write("		    		</li>\n");
      out.write("		    		<li>\n");
      out.write("		    			<label for=\"passwd2\">비밀번호 확인</label>\n");
      out.write("		    			<input type=\"password\" id=\"passwd2\" name=\"passwd2\" \n");
      out.write("		    							placeholder=\"비밀번호를 동일하게 입력해 주세요.\">\n");
      out.write("		    		</li>\n");
      out.write("		    		<li>\n");
      out.write("		    			<label for=\"name\">이름</label>\n");
      out.write("		    			<input type=\"text\" id=\"name\" name=\"name\" \n");
      out.write("		    							placeholder=\"이름은 한글로 입력해 주세요.\">\n");
      out.write("		    		</li>\n");
      out.write("		    		<li>\n");
      out.write("		    			<label for=\"email\">이메일</label>\n");
      out.write("		    			<input type=\"text\" id=\"email\" name=\"email\">\n");
      out.write("		    		</li>\n");
      out.write("		    		<li>\n");
      out.write("		    			<label for=\"gender\">성별</label>\n");
      out.write("		    			<input type=\"radio\" id=\"gender\" name=\"gender\" value=\"남\" checked>남\n");
      out.write("		    			<input type=\"radio\" id=\"gender\" name=\"gender\" value=\"여\">여\n");
      out.write("		    		</li>\n");
      out.write("		    	</ul>\n");
      out.write("		    </fieldset>\n");
      out.write("		    <div class=\"button\">\n");
      out.write("		    	<button type=\"button\" onclick=\"checkMember()\">가입</button>\n");
      out.write("		    	<button type=\"reset\">취소</button>\n");
      out.write("		    </div>\n");
      out.write("		  </form>\n");
      out.write("	  </section>\n");
      out.write("	</div>\n");
      out.write("	\n");
      out.write("	");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
